generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@localhost:5432/gbdb?schema=public"
}

model TwitchAuthToken {
  type            String @unique
  twitchAuthToken String
}

model Gameforum {
  id       Int                @id @unique
  game     Game               @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId   Int                @unique
  messages GameForumMessage[]
}

model GameForumMessage {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  gameForum Gameforum @relation(fields: [forumId], references: [id], onDelete: Cascade)
  forumId   Int
  message   String
  sentBy    User      @relation(fields: [userId], references: [id])
  userId    String
}

model PrivateMessage {
  createdAt    DateTime @default(now())
  sentBy       User     @relation("sender", fields: [sentById], references: [id], onDelete: Cascade)
  sentById     String
  recievedBy   User     @relation("reciever", fields: [recievedById], references: [id], onDelete: Cascade)
  recievedById String
  message      String   @db.VarChar(500)

  @@id([sentById, recievedById, createdAt])
}

model User {
  id               String             @id
  email            String?
  userName         String?
  bio              String?
  timezone         String?
  games            Game[]
  followedBy       Follows[]          @relation("followedBy")
  following        Follows[]          @relation("following")
  sentBy           PrivateMessage[]   @relation("sender")
  recievedBy       PrivateMessage[]   @relation("reciever")
  GameForumMessage GameForumMessage[]
}

model Follows {
  followedBy      User   @relation("followedBy", fields: [followedById], references: [id], onDelete: Cascade)
  followedById    String
  followedByUName String
  following       User   @relation("following", fields: [followingId], references: [id], onDelete: Cascade)
  followingId     String
  followingUName  String
  game            Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId          Int
  gameName        String

  @@id([followingId, followedById])
}

model Game {
  id               Int        @id @unique
  name             String
  summary          String?
  url              String?
  platformIds      Int[]
  modeIds          Int[]
  genreIds         Int[]
  platforms        Platform[]
  modes            Mode[]
  genres           Genre[]
  users            User[]
  firstReleaseDate Int?
  totalRating      Float?
  Follows          Follows[]
  forum            Gameforum?
}

model Platform {
  id    Int    @id @unique
  name  String
  games Game[]
}

model Mode {
  id    Int    @id @unique
  name  String
  games Game[]
}

model Genre {
  id    Int    @id @unique
  name  String
  games Game[]
}
